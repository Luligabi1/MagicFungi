plugins {
    id 'fabric-loom' version '0.10-SNAPSHOT'
    id "com.matthewprenger.cursegradle" version '1.4.0'
    id "com.modrinth.minotaur" version '2.4.0'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

def ENV = System.getenv()

def RELEASE_NAME = "[${project.minecraft_version}] ${version}"
def RELEASE_FILE = "${buildDir}/libs/${archivesBaseName}-${version}.jar"

@SuppressWarnings('GrMethodMayBeStatic')
def getChangeLog() {
    return ""
}

repositories {
    mavenCentral()
    maven { url 'https://maven.minecraftforge.net/' } // Terrablender
    maven { url "https://maven.blamejared.com" } // Patchouli
    maven { url "https://maven.shedaniel.me/" } // REI
    maven { url "https://jitpack.io" } // Omega Config, Fabric Shield Lib
    maven { url 'https://maven.terraformersmc.com/releases/' } // Mod Menu
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    modImplementation "com.github.glitchfiend:TerraBlender-fabric:${project.terrablender_version}"
    modRuntimeOnly "com.github.glitchfiend:TerraBlender-fabric:${project.terrablender_version}"

    modImplementation "vazkii.patchouli:Patchouli:${project.patchouli_version}"


    modImplementation "com.github.Draylar.omega-config:omega-config-base:${project.omega_config_version}"
    include "com.github.Draylar.omega-config:omega-config-base:${project.omega_config_version}"

    modImplementation "com.github.Draylar.omega-config:omega-config-gui:${project.omega_config_version}"
    include "com.github.Draylar.omega-config:omega-config-gui:${project.omega_config_version}"


    modImplementation "com.github.CrimsonDawn45:Fabric-Shield-Lib:v${project.fabric_shield_lib_version}"
    include "com.github.CrimsonDawn45:Fabric-Shield-Lib:v${project.fabric_shield_lib_version}"


    modCompileOnly "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"
    modRuntimeOnly "me.shedaniel:RoughlyEnoughItems-fabric:${project.rei_version}"

    modCompileOnly "com.terraformersmc:modmenu:${project.modmenu_version}"
    modRuntimeOnly "com.terraformersmc:modmenu:${project.modmenu_version}"
}

processResources {
    inputs.property "1.0", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

loom {
    accessWidenerPath = file("src/main/resources/magicfungi.accesswidener")
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

jar {
    from "LICENSE"
}

curseforge {
    if (ENV.CURSEFORGE_API_KEY) {
        apiKey = ENV.CURSEFORGE_API_KEY
    }

    project {
        id = project.curseforge_id
        changelog = getChangeLog()
        releaseType = "beta"
        addGameVersion project.minecraft_version
        addGameVersion "Fabric"

        mainArtifact(file(RELEASE_FILE)) {
            displayName = RELEASE_NAME
            relations {
                requiredDependency 'fabric-api'
                requiredDependency 'terrablender-fabric'
                requiredDependency 'patchouli-fabric'

                embeddedLibrary 'omega-config'
                embeddedLibrary 'fabric-shield-lib'

                optionalDependency 'roughly-enough-items'
            }
        }

        afterEvaluate {
            uploadTask.dependsOn("remapJar")
        }
    }

    options {
        forgeGradleIntegration = false
    }
}

//Modrinth publishing
modrinth {
    if (ENV.MODRINTH_TOKEN) {
        token = ENV.MODRINTH_TOKEN
    }
    projectId = project.modrinth_id
    versionNumber = project.mod_version
    uploadFile = remapJar
    gameVersions = [project.minecraft_version]
    loaders = ['fabric']
    versionType = "beta"
    changelog = getChangeLog()
    dependencies {
        required.project("fabric-api")
        required.project("patchouli")

        optional.project("roughly-enough-items")
    }
}